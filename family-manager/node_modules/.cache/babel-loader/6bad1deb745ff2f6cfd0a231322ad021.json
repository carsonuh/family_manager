{"ast":null,"code":"var _jsxFileName = \"/Users/carson/Documents/GitHub/family_manager/family-manager/src/components/Home.jsx\";\nimport React, { Component } from 'react';\nimport { auth, provider } from '../firebase.js';\nimport SharedCalendar from './SharedCalendar.jsx';\nimport EmptyCalendar from './EmptyCalendar.jsx';\n/**\n * Home Component, Displays the home page and calendar component\n */\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null\n    }; //Bind class functions\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n  /**\n   * Checks the users previous session state to see if they were logged in\n   * If they were, keep them logged in\n   */\n\n\n  componentDidMount() {\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user\n        });\n      }\n    });\n  }\n  /**\n   * Executes firebase auth to launch google signin\n   */\n\n\n  login() {\n    auth.signInWithPopup(provider).then(result => {\n      const user = result.user;\n      this.setState({\n        user\n      });\n    });\n  }\n  /**\n   * Executes a logout with firebase auth\n   */\n\n\n  logout() {\n    auth.signOut().then(() => {\n      this.setState({\n        user: null\n      });\n    });\n  }\n  /**\n   * Renders a blank calendar when not logged in, renders calendar with user data when logged in\n   */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.user ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Log Out\"), React.createElement(SharedCalendar, {\n      userEmail: this.state.user.email,\n      usersName: this.state.user.displayName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(EmptyCalendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/carson/Documents/GitHub/family_manager/family-manager/src/components/Home.jsx"],"names":["React","Component","auth","provider","SharedCalendar","EmptyCalendar","Home","constructor","props","state","user","login","bind","logout","componentDidMount","onAuthStateChanged","setState","signInWithPopup","then","result","signOut","render","email","displayName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,gBAA/B;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA;;;;AAGA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AACzBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb,CAFe,CAMf;;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACH;AAED;;;;;;AAIAE,EAAAA,iBAAiB,GAAG;AAChBZ,IAAAA,IAAI,CAACa,kBAAL,CAAyBL,IAAD,IAAU;AAC9B,UAAIA,IAAJ,EAAU;AACN,aAAKM,QAAL,CAAc;AAACN,UAAAA;AAAD,SAAd;AACH;AACJ,KAJD;AAKH;AAED;;;;;AAGAC,EAAAA,KAAK,GAAG;AACJT,IAAAA,IAAI,CAACe,eAAL,CAAqBd,QAArB,EACKe,IADL,CACWC,MAAD,IAAY;AACd,YAAMT,IAAI,GAAGS,MAAM,CAACT,IAApB;AACA,WAAKM,QAAL,CAAc;AACVN,QAAAA;AADU,OAAd;AAGH,KANL;AAOH;AAED;;;;;AAGAG,EAAAA,MAAM,GAAG;AACLX,IAAAA,IAAI,CAACkB,OAAL,GACKF,IADL,CACU,MAAM;AACR,WAAKF,QAAL,CAAc;AACVN,QAAAA,IAAI,EAAE;AADI,OAAd;AAGH,KALL;AAMH;AAED;;;;;AAGAW,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,KAAL,CAAWC,IAAX,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKG,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWC,IAAX,CAAgBY,KAA3C;AAAkD,MAAA,SAAS,EAAE,KAAKb,KAAL,CAAWC,IAAX,CAAgBa,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADH,GAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,OAAO,EAAE,KAAKZ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAPR,CADJ;AAeH;;AApEwB;;AAuE7B,eAAeL,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { auth, provider } from '../firebase.js';\nimport SharedCalendar from './SharedCalendar.jsx';\nimport EmptyCalendar from './EmptyCalendar.jsx';\n\n/**\n * Home Component, Displays the home page and calendar component\n */\nclass Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: null\n        }\n\n        //Bind class functions\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    /**\n     * Checks the users previous session state to see if they were logged in\n     * If they were, keep them logged in\n     */\n    componentDidMount() {\n        auth.onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({user});\n            }\n        });\n    }\n\n    /**\n     * Executes firebase auth to launch google signin\n     */\n    login() {\n        auth.signInWithPopup(provider)\n            .then((result) => {\n                const user = result.user;\n                this.setState({\n                    user\n                });\n            });\n    }\n\n    /**\n     * Executes a logout with firebase auth\n     */\n    logout() {\n        auth.signOut()\n            .then(() => {\n                this.setState({\n                    user: null\n                });\n            });\n    }\n\n    /**\n     * Renders a blank calendar when not logged in, renders calendar with user data when logged in\n     */\n    render() {\n        return (\n            <div>\n                {this.state.user ?\n                    <div>\n                        <button onClick={this.logout}>Log Out</button>\n                        <SharedCalendar userEmail={this.state.user.email} usersName={this.state.user.displayName}/>\n                    </div>\n                :\n                    <div>\n                        <button onClick={this.login}>Log In</button>\n                        <EmptyCalendar />\n                    </div>\n                }   \n            </div>\n        )\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}